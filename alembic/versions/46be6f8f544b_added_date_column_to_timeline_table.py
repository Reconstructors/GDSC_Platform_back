"""Added date column to timeline table.

Revision ID: 46be6f8f544b
Revises: 602d2790a2f4
Create Date: 2024-02-07 20:50:00.276927

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '46be6f8f544b'
down_revision: Union[str, None] = '602d2790a2f4'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('ix_study_matches_id', table_name='study_matches')
    op.drop_table('study_matches')
    op.drop_index('ix_studies_id', table_name='studies')
    op.drop_index('ix_studies_title', table_name='studies')
    op.drop_table('studies')
    op.drop_index('ix_timeline_id', table_name='timeline')
    op.drop_index('ix_timeline_title', table_name='timeline')
    op.drop_table('timeline')
    op.drop_index('ix_users_bio', table_name='users')
    op.drop_index('ix_users_email', table_name='users')
    op.drop_index('ix_users_id', table_name='users')
    op.drop_index('ix_users_name', table_name='users')
    op.drop_table('users')
    op.drop_index('ix_projects_id', table_name='projects')
    op.drop_index('ix_projects_title', table_name='projects')
    op.drop_table('projects')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('projects',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('title', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('start', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('end', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('description', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('contact_info', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('status', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('photo_ids', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('member_ids', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='projects_pkey')
    )
    op.create_index('ix_projects_title', 'projects', ['title'], unique=False)
    op.create_index('ix_projects_id', 'projects', ['id'], unique=False)
    op.create_table('users',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('users_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('email', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('bio', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('description', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('links', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('interests', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('participation', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('project_interest', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='users_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_index('ix_users_name', 'users', ['name'], unique=False)
    op.create_index('ix_users_id', 'users', ['id'], unique=False)
    op.create_index('ix_users_email', 'users', ['email'], unique=True)
    op.create_index('ix_users_bio', 'users', ['bio'], unique=False)
    op.create_table('timeline',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('title', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('time', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='timeline_pkey')
    )
    op.create_index('ix_timeline_title', 'timeline', ['title'], unique=False)
    op.create_index('ix_timeline_id', 'timeline', ['id'], unique=False)
    op.create_table('studies',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('studies_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('title', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('start', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('end', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('description', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('contact_info', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('status', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('photo_ids', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='studies_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_index('ix_studies_title', 'studies', ['title'], unique=False)
    op.create_index('ix_studies_id', 'studies', ['id'], unique=False)
    op.create_table('study_matches',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('study_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('is_approved', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('is_leader', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['study_id'], ['studies.id'], name='study_matches_study_id_fkey'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='study_matches_user_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='study_matches_pkey')
    )
    op.create_index('ix_study_matches_id', 'study_matches', ['id'], unique=False)
    # ### end Alembic commands ###
